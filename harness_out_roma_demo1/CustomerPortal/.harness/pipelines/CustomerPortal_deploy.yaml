pipeline:
  name: CustomerPortal deploy
  identifier: CustomerPortal_deploy
  orgIdentifier: default
  projectIdentifier: UCDHarnessRG
  tags:
    bsa: Customer Solutions
    language: java
    build: gradle
  stages:
  - stage:
      name: Deploy customerportal-api
      identifier: Deploy_customerportal_api
      type: Deployment
      spec:
        deploymentType: CustomDeployment
        service:
          serviceRef: CustomerPortal_customerportal_api
        environment:
          environmentRef: <+input>
          deployToAll: true
          infrastructureDefinitions:
          - identifier: input
        execution:
          steps:
          - step:
              name: Fetch Instances
              identifier: Fetch_Instances
              type: FetchInstanceScript
              timeout: 10m
              spec:
                shell: Bash
                onDelegate: true
                source:
                  type: Inline
                  spec:
                    script: 'echo "Fetching instances for $HARNESS_SERVICE_NAME..."

                      echo ''{"instances":[{"name":"sample-instance","id":"1"}]}''

                      '
          - step:
              name: Deploy
              identifier: Deploy
              type: ShellScript
              spec:
                shell: Bash
                onDelegate: true
                source:
                  type: Inline
                  spec:
                    script: 'echo TODO: implement deployment'
      failureStrategies:
      - onFailure:
          errors:
          - AllErrors
          action:
            type: StageRollback
  - stage:
      name: Deploy customerportal-batch
      identifier: Deploy_customerportal_batch
      type: Deployment
      spec:
        deploymentType: CustomDeployment
        service:
          serviceRef: CustomerPortal_customerportal_batch
        environment:
          environmentRef: <+input>
          deployToAll: true
          infrastructureDefinitions:
          - identifier: input
        execution:
          steps:
          - step:
              name: Fetch Instances
              identifier: Fetch_Instances
              type: FetchInstanceScript
              timeout: 10m
              spec:
                shell: Bash
                onDelegate: true
                source:
                  type: Inline
                  spec:
                    script: 'echo "Fetching instances for $HARNESS_SERVICE_NAME..."

                      echo ''{"instances":[{"name":"sample-instance","id":"1"}]}''

                      '
          - step:
              name: Deploy
              identifier: Deploy
              type: ShellScript
              spec:
                shell: Bash
                onDelegate: true
                source:
                  type: Inline
                  spec:
                    script: 'echo TODO: implement deployment'
      failureStrategies:
      - onFailure:
          errors:
          - AllErrors
          action:
            type: StageRollback
  - stage:
      name: Deploy customerportal-web
      identifier: Deploy_customerportal_web
      type: Deployment
      spec:
        deploymentType: CustomDeployment
        service:
          serviceRef: CustomerPortal_customerportal_web
        environment:
          environmentRef: <+input>
          deployToAll: true
          infrastructureDefinitions:
          - identifier: input
        execution:
          steps:
          - step:
              name: Fetch Instances
              identifier: Fetch_Instances
              type: FetchInstanceScript
              timeout: 10m
              spec:
                shell: Bash
                onDelegate: true
                source:
                  type: Inline
                  spec:
                    script: 'echo "Fetching instances for $HARNESS_SERVICE_NAME..."

                      echo ''{"instances":[{"name":"sample-instance","id":"1"}]}''

                      '
          - step:
              name: Deploy
              identifier: Deploy
              type: ShellScript
              spec:
                shell: Bash
                onDelegate: true
                source:
                  type: Inline
                  spec:
                    script: 'echo TODO: implement deployment'
      failureStrategies:
      - onFailure:
          errors:
          - AllErrors
          action:
            type: StageRollback
